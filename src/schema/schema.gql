type Query {
  book(id: ID!): BookType
  books: [BookType!]
  author(id: ID!): AuthorType
  authors: [AuthorType!]
  currentUser: UserType
}

type Mutation {
  addAuthor(name: String, age: Int): AuthorType
  addBook(title: String, genre: String, authorId: String, ownerId: String): BookType
  signup(name: String!, email: String!, password: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type Subscription {
  newAuthor: AuthorType
  newBook: BookType
}

type BookType {
  id: ID!
  title: String!
  genre: String
  author: AuthorType!
  owner: UserType
}

type AuthorType {
  id: ID!
  name: String!
  age: Int
  books: [BookType!]
}

type UserType {
  id: ID!
  name: String!
  email: String!
  password: String!
  books: [BookType!]
}

type AuthPayload {
  token: String!
  user: UserType
}
